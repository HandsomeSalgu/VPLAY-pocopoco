<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pocopoco_vplay.users.model.mapper.UsersMapper">
	<select id="checkId">
		SELECT COUNT(*)
		FROM USERS
		WHERE USER_ID=#{id}
	</select>

	<!-- 로그인 -->
	<select id="signIn">
		SELECT *
		FROM USERS
		WHERE USER_ID = #{userId} AND STATUS ='Y'
	</select>

	<insert id="insertUser">
		INSERT INTO USERS (USER_ID, USER_PW, USER_NICKNAME, USER_NAME, USER_PHONE, USER_EMAIL, USER_BIRTH, USER_GENDER, STATUS, IS_ADMIN, JOIN_DATE, USER_COMMENT, USER_CREATOR_RANK, USER_PLAN, USER_PROFILE, LOGIN_TYPE, KAKAO_ID
		) VALUES (#{userId}, #{userPw}, #{userNickname}, #{userName}, #{userPhone}, #{userEmail}, #{userBirth}, #{userGender}, 'Y', 'N', CURRENT_TIMESTAMP, DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{loginType},#{kakaoId})
	</insert>

	<select id="selectMyProject">
		SELECT
		    C.CONTENT_TITLE, C.VIEWS,
		    C.CONTENT_NO, MENU.MENU_NO, MENU.MENU_NAME,
		    (SELECT COUNT(*) FROM LIKES L2 WHERE L2.CONTENT_NO = C.CONTENT_NO) AS LIKE_COUNT
		FROM CONTENT C
		LEFT JOIN LIKES L ON C.CONTENT_NO = L.CONTENT_NO
		LEFT JOIN BOARD B ON C.CONTENT_NO = B.CONTENT_NO
		LEFT JOIN CONTENT_CATEGORY ON C.CONTENT_NO = CONTENT_CATEGORY.CONTENT_NO
		LEFT JOIN CATEGORY ON CONTENT_CATEGORY.CATEGORY_NO = CATEGORY.CATEGORY_NO
		LEFT JOIN MENU ON CATEGORY.MENU_NO = MENU.MENU_NO
		WHERE L.USER_NO = #{ID}
		  AND B.BOARD_TYPE IS NULL
		  AND MENU.MENU_NAME IS NOT NULL
		GROUP BY 
		    C.CONTENT_NO, 
		    C.CONTENT_TITLE, 
		    C.VIEWS, 
		    MENU.MENU_NO, 
		    MENU.MENU_NAME
	</select>

	<select id="selectMyRealProjects">
		SELECT 
		    C.CONTENT_NO,
		    C.CONTENT_TITLE,
		    C.CREATE_DATE,
		    C.MODIFY_DATE,
		    C.CONTENT_STATUS,
		    C.DELETE_STATUS,
		    C.USER_NO,
		    C.VIEWS,
		    C.MD_RECOMMENDATION,
		    (SELECT COUNT(*) FROM LIKES WHERE LIKES.CONTENT_NO = C.CONTENT_NO) AS LIKE_COUNT,
		    B.BOARD_TYPE,
		    M.MENU_NAME,
		    GROUP_CONCAT(CCC.CATEGORY_NAME ORDER BY CCC.CATEGORY_NAME SEPARATOR ',') AS CATEGORY_NAME,
		    M.MENU_NO
		FROM CONTENT C
		LEFT JOIN BOARD B ON C.CONTENT_NO = B.CONTENT_NO
		LEFT JOIN CONTENT_CATEGORY CC ON C.CONTENT_NO = CC.CONTENT_NO
		LEFT JOIN CATEGORY CCC ON CC.CATEGORY_NO = CCC.CATEGORY_NO
		LEFT JOIN MENU M ON CCC.MENU_NO = M.MENU_NO
		WHERE C.USER_NO = #{userNo}
		  AND B.BOARD_TYPE IS NULL
		  AND M.MENU_NAME IS NOT NULL
		  AND C.CONTENT_STATUS = 'Y'
		GROUP BY
		    C.CONTENT_NO,
		    C.CONTENT_TITLE,
		    C.CREATE_DATE,
		    C.MODIFY_DATE,
		    C.CONTENT_STATUS,
		    C.DELETE_STATUS,
		    C.USER_NO,
		    C.VIEWS,
		    C.MD_RECOMMENDATION,
		    B.BOARD_TYPE,
		    M.MENU_NAME,
		    M.MENU_NO
	</select>

	<select id="selectuserIdPhone">
		SELECT COUNT(*)
		FROM USERS
		WHERE USER_NAME =#{userName} AND USER_PHONE =#{userPhone}
	</select>

	<select id="findfollow">
		SELECT COUNT(*)
		FROM SUBSCRIBE
		WHERE CREATER_NO = #{userNo}
	</select>

	<select id="findId">
		SELECT USER_ID, USER_NAME
		FROM USERS
		WHERE USER_NAME =#{userName} AND USER_PHONE =#{userPhone} AND USER_EMAIL =#{userEmail}
	</select>

	<update id="updateInfo">
		UPDATE USERS
		SET USER_NAME = #{userName},
		    USER_NICKNAME = #{userNickname},
		    USER_PHONE = #{userPhone},
		    USER_EMAIL = #{userEmail},
		    USER_BIRTH = #{userBirth},
		    USER_GENDER = #{userGender},
		    USER_COMMENT = #{userComment}
		WHERE USER_NO = #{userNo}
	</update>

	<update id="changePw">
		UPDATE USERS
		SET USER_PW = #{userPw}
		WHERE USER_NO = #{userNo}
	</update>

	<select id="findPw">
		SELECT COUNT(*)
		FROM USERS
		WHERE USER_ID =#{userId} AND USER_PHONE = #{userPhone}
	</select>

	<update id="tempPwd">
		UPDATE USERS
		SET USER_PW =#{userPw}
		WHERE USER_ID =#{userId}
	</update>

	<select id="findName">
		SELECT USER_NAME
		FROM USERS
		WHERE USER_ID =#{userId}
	</select>

	<select id="existUsers">
		SELECT *
		FROM USERS
		WHERE LOGIN_TYPE='K' AND USER_ID IS NULL AND KAKAO_ID=#{KAKAOID}
	</select>

	<select id="selectTopUser">
		SELECT 
		    U.USER_NO,
		    U.USER_ID,
		    U.USER_NICKNAME,
		    U.USER_NAME,
		    U.USER_PHONE,
		    U.USER_EMAIL,
		    U.USER_COMMENT,
		    U.USER_PROFILE,
		    COUNT(S.SUBSCRIBE_NO) AS SUBSCRIBER
		FROM USERS U
		JOIN SUBSCRIBE S ON U.USER_NO = S.CREATER_NO
		GROUP BY 
		    U.USER_NO,
		    U.USER_ID,
		    U.USER_NICKNAME,
		    U.USER_NAME,
		    U.USER_PHONE,
		    U.USER_EMAIL,
		    U.USER_COMMENT,
		    U.USER_PROFILE
		ORDER BY SUBSCRIBER DESC
		LIMIT 12
	</select>

	<update id="updateUserPlan">
		UPDATE USERS
		SET USER_PLAN = #{userPlan}
		WHERE USER_NO = #{userNo}
	</update>
	
	<select id="getPaymentDate">
		SELECT PAYMENT_DATE FROM USERS JOIN PAYMENT USING(USER_NO)
		WHERE USER_NO=#{userNo} ORDER BY PAYMENT_DATE DESC
		LIMIT 1
	</select>
	
	<update id="deleteUserPlan">
		UPDATE USERS
		SET USER_PLAN = NULL WHERE USER_NO=#{userNo}
	</update>

	<update id="updateAlertShown">
		UPDATE USERS
		SET ALERT_SHOWN=1 WHERE USER_NO=#{userNo}
	</update>

	<update id="resetAlertShown">
		UPDATE USERS
		SET ALERT_SHOWN=0 WHERE USER_NO=#{userNo}
	</update>

	<update id="updateProfile">
		UPDATE USERS
		SET USER_PROFILE = #{userProfile}
		WHERE USER_ID = #{userId}
	</update>

	<select id="selectProfile">
		SELECT USER_PROFILE
		FROM USERS
		WHERE USER_ID = #{userId}
	</select>

	<select id="existGoogleUsers">
		SELECT *
		FROM USERS
		WHERE LOGIN_TYPE='G' AND USER_ID IS NULL AND GOOGLE_ID=#{googleId}
	</select>

	<select id="selectMyMessage">
		SELECT
		    M.MESSAGE_NO,
		    M.SENDER_NO,
		    SENDER_USER.USER_NICKNAME AS SENDER_NAME,
		    M.RECEIVER_NO,
		    RECEIVER_USER.USER_NICKNAME AS RECEIVER_NAME,
		    M.CONTENT,
		    M.SENT_TIME,
		    M.READ_STATUS,
		    M.CONVERSATION_ID
		FROM MESSAGE M
		JOIN USERS SENDER_USER ON M.SENDER_NO = SENDER_USER.USER_NO
		JOIN USERS RECEIVER_USER ON M.RECEIVER_NO = RECEIVER_USER.USER_NO
		WHERE M.RECEIVER_NO = #{userNo}
		   OR M.SENDER_NO = #{userNo}
		ORDER BY M.SENT_TIME DESC
	</select>
	<update id="updateMessageStatus">
	    UPDATE MESSAGE
	    SET READ_STATUS = 'Y'
	    WHERE MESSAGE_NO = #{messageNo}
	</update>
	
	<select id="existReceiver">
	    SELECT COUNT(*) 
	    FROM USERS 
	    WHERE USER_NICKNAME = #{receiverName}
	</select>
	
	<insert id="insertMessage">
	    INSERT INTO MESSAGE (SENDER_NO, RECEIVER_NO, CONTENT, SENT_TIME, READ_STATUS, CONVERSATION_ID)
	    VALUES (
	        #{senderNo},
	        #{receiverNo},
	        #{content},
	        CURRENT_TIMESTAMP,
	        DEFAULT,
	        CONCAT(LEAST(#{senderNo}, #{receiverNo}), '_', GREATEST(#{senderNo}, #{receiverNo}))
		)
	</insert>
	
	<select id="getReceiverNo">
	    SELECT USER_NO 
	    FROM USERS 
	    WHERE USER_NICKNAME = #{receiverName}
	</select>
	
	<select id="getUnreadMessageCount">
		SELECT COUNT(*) 
		FROM MESSAGE 
		WHERE RECEIVER_NO = #{userNo} AND READ_STATUS = 'N'
	</select>

	<select id="selectMyDownloads">
	    SELECT
	        C.CONTENT_NO,
	        C.CONTENT_TITLE,
	        C.CREATE_DATE,
	        C.MODIFY_DATE,
	        C.CONTENT_STATUS,
	        C.DELETE_STATUS,
	        C.USER_NO,
	        C.VIEWS,
	        C.MD_RECOMMENDATION,
	        (SELECT COUNT(*) FROM LIKES L WHERE L.CONTENT_NO = C.CONTENT_NO) AS LIKE_COUNT,
	        B.BOARD_TYPE,
	        M.MENU_NAME, 
	        M.MENU_NO,
	        (
	            SELECT GROUP_CONCAT(CG.CATEGORY_NAME ORDER BY CG.CATEGORY_NAME SEPARATOR ',')
	            FROM CONTENT_CATEGORY CC
	            JOIN CATEGORY CG ON CC.CATEGORY_NO = CG.CATEGORY_NO
	            WHERE CC.CONTENT_NO = C.CONTENT_NO
	        ) AS CATEGORY_NAME
	    FROM CONTENT C
	    LEFT JOIN BOARD B ON C.CONTENT_NO = B.CONTENT_NO
	    LEFT JOIN USERS U ON C.USER_NO = U.USER_NO
	    LEFT JOIN DOWNLOADS D ON C.CONTENT_NO = D.CONTENT_NO
	    LEFT JOIN MENU M ON (
	        SELECT CG.MENU_NO
	        FROM CONTENT_CATEGORY CC
	        JOIN CATEGORY CG ON CC.CATEGORY_NO = CG.CATEGORY_NO
	        WHERE CC.CONTENT_NO = C.CONTENT_NO
	        LIMIT 1
	    ) = M.MENU_NO
	    WHERE D.USER_NO = #{userNo}
	      AND B.BOARD_TYPE IS NULL
	      AND M.MENU_NAME IS NOT NULL
	      AND C.CONTENT_STATUS = 'Y'
	</select>
	
	<select id="selectSubscribeList">
	    SELECT 
	        S.CREATER_NO,
	        C.*,
	        SC.SUBSCRIBERCOUNT,
	        U2.*
	    FROM USERS U
	    JOIN SUBSCRIBE S ON U.USER_NO = S.USER_NO
	    JOIN CONTENT C ON C.USER_NO = S.CREATER_NO
	    JOIN (
	        SELECT CREATER_NO, COUNT(USER_NO) AS SUBSCRIBERCOUNT
	        FROM SUBSCRIBE
	        GROUP BY CREATER_NO
	    ) SC ON SC.CREATER_NO = S.CREATER_NO
	    JOIN USERS U2 ON U2.USER_NO = S.CREATER_NO
	    WHERE S.USER_NO = #{userNo}
	</select>
	
	<select id="getInfoUser">
		SELECT * 
		FROM USERS 
		WHERE USER_NO = #{createrNo}
	</select>
	
	<select id="isSubscribed">
		SELECT COUNT(*) 
    	FROM SUBSCRIBE 
    	WHERE CREATER_NO = #{createrNo} AND USER_NO = #{userNo} 
	</select>
	
	<insert id="updateSubscribe" parameterType="map">
	    <choose>
	        <when test="isCancel == true">
	            DELETE FROM SUBSCRIBE
	            WHERE CREATER_NO = #{createrNo} AND USER_NO = #{userNo}
	        </when>
	        <otherwise>
	            INSERT INTO SUBSCRIBE (CREATER_NO, USER_NO)
	            VALUES (#{createrNo}, #{userNo})
	        </otherwise>
	    </choose>
	</insert>
	

</mapper>